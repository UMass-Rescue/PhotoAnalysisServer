name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  static_analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

  # test:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [ 3.7 ]
  #   services:
  #     # Label used to access the service container
  #     postgres:
  #       # Docker Hub image
  #       image: postgres
  #       # Provide the password for postgres
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       # Set health checks to wait until postgres has started
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         # Maps tcp port 5432 on service container to the host
  #         - 5432:5432
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Test with pytest
  #     run: |
  #       pip install -e labeler_api
  #       pip install  pytest pytest-cov
  #       python -m pip install --upgrade pip
  #       pip install -r test/requirements.txt
  #       pytest test --cov=. --cov-report html
  #     env:
  #       PG_HOST: localhost
  #       PG_PORT: 5432
  #       PG_PASS: postgres
  #   - name: "Upload coverage to Codecov"
  #     uses: codecov/codecov-action@v1
  #     with:
  #       fail_ci_if_error: true
  #
  # autodoc:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [ 3.7 ]
  #
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: "Sphinx autodoc"
  #     run: |
  #       pip install -U sphinx sphinx-autoapi
  #       sphinx-build docs public -b dirhtml
  #   - name: Deploy Docs
  #     uses: peaceiris/actions-gh-pages@v3
  #     with:
  #       github_token: ${{ secrets.GITHUB_TOKEN }}
  #       publish_dir: public
